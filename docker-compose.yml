version: '3.7'
services:
  app:
    profiles: ["container"]
    # ECS Task Definition 의 container name 과 맞춤
    container_name: syncday-api
    build:
      context: .
      dockerfile: ./Dockerfile.dev
    volumes:
      - .:/app
      - /app/node_modules
    command: npm start
    env_file:
      - .env.docker
    networks:
      - docker-net
    ports:
      - 3011:3011
    depends_on:
      - nginx
      - mariadb
  nginx:
    image: nginx
    volumes:
      - ./configs/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - docker-net
    ports:
      - 80:80
  mariadb:
    image: mariadb
    container_name: syncday-local-mariadb
    ports:
      - 3306:3306
    networks:
      - docker-net
    volumes:
      - ".docker/syncday-local-mariadb:/var/lib/mysql"
    environment:
      - MYSQL_USER=local_sample
      - MYSQL_ROOT_PASSWORD=syncday_local_r00tPass
      - MYSQL_PASSWORD=syncday_local_Pass
      - MYSQL_DATABASE=syncday_local
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "-uroot",
          "-psyncday_local_r00tPass",
          " ping",
          "-h",
          "localhost"
        ]
      timeout: 50s
      retries: 10
  # production 에서는 elasticache 로 대체됨
  redis:
    container_name: redis
    image: "redis:latest"
    ports:
      - 6379:6379
      - 6380:6380
      - 6381:6381
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - ".docker/redis:/opt/redis-data"
      - ./configs/redis/redis.local.conf:/usr/local/etc/redis/redis.conf
    restart: always
  redis-cluster-node-2:
    network_mode: "service:redis"
    image: redis:latest
    container_name: redis-cluster-node-2
    volumes:
      - ./configs/redis/redis.cluster.conf:/usr/local/etc/redis.conf
      - ".docker/redis:/opt/redis-data"
    command: redis-server --port 6380 --replicaof 127.0.0.1 6379 /usr/local/etc/redis.conf
  redis-cluster-node-3:
    network_mode: "service:redis"
    image: redis:latest
    container_name: redis-cluster-node-3
    volumes:
      - ./configs/redis/redis3.conf:/usr/local/etc/redis.conf
      - ".docker/redis:/opt/redis-data"
    command: redis-server --port 6381 --replicaof 127.0.0.1 6379 /usr/local/etc/redis.conf
  # Enable cluster mode
  redis-cluster-entry:
    network_mode: "service:redis"
    image: redis:latest
    container_name: redis-cluster-entry
    command: redis-cli --cluster create 127.0.0.1:6379 127.0.0.1:6380 127.0.0.1:6381 --cluster-yes
    depends_on:
      - redis
      - redis-cluster-node-2
      - redis-cluster-node-3

networks:
  docker-net:
    driver: bridge